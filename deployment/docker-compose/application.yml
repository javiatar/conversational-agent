name: conversational-agent

x-api-healthcheck: &apiHealthcheck
  test:
    - "CMD-SHELL"
    - |
      python -c '
      import sys
      import urllib.request

      result = urllib.request.urlopen("http://localhost:5020/health")
      if not (200 <= result.status < 300):
        sys.exit(1)
      ',
  interval: 5s
  timeout: 10s
  retries: 20

# * Postgres server environment variables
x-db-server-environment: &postgresEnv
  POSTGRES_USER: admin
  POSTGRES_PASSWORD: admin
  POSTGRES_DB: conversational_agent_db

services:
  conversational-agent-api:
    image:  conversational-agent-api:latest
    ports:
      - published: "5020"
        target: "5020"
    command:
      - python3
      - -m
      - uvicorn 
      - conversational_agent.api.endpoints:app 
      - --host
      - "0.0.0.0"
      - --port 
      - "5020"
    env_file: 
      - ../../.env
    volumes:
      # Mounts local storage directory into container (RAG)
      - ../../storage:/app/storage
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      conversational-agent-internal: {}
      conversational-agent-external: {}
    healthcheck: *apiHealthcheck

  postgres:
    image: postgres:17
    environment:
      <<: *postgresEnv
    volumes:
      - postgres-data:/var/lib/postgresql/data # Default PSQL data directory
    ports:
      - published: "5432"
        target: "5432"
    healthcheck:
      test:
        ["CMD", "pg_isready", "-h", "localhost", "-p", "5432", "-U", "admin", "-d", "conversational_agent_db"]
      interval: 5s
      retries: 5
    networks:
      conversational-agent-internal: {}
      conversational-agent-external: {}

volumes:
  # Named volume to persist DB data between container restarts
  postgres-data: {}

networks:
  conversational-agent-internal: {}
  conversational-agent-external: {}